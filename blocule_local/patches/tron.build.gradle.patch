--- build.gradle	2018-05-28 21:04:41.706228567 +0000
+++ build.gradle.pi	2018-05-28 21:38:56.242905585 +0000
@@ -6,12 +6,12 @@
 apply plugin: 'com.google.protobuf'
 apply plugin: 'org.springframework.boot'
 apply plugin: "io.spring.dependency-management"
-apply plugin: "com.liferay.node"
 apply plugin: 'application'
 
 sourceCompatibility = 1.8
 targetCompatibility = JavaVersion.VERSION_1_8
 [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
+def CUR_DIR = new File("").absolutePath
 
 compileJava.options*.compilerArgs = [
         "-Xlint:serial", "-Xlint:varargs", "-Xlint:classfile", "-Xlint:dep-ann",
@@ -62,7 +62,6 @@
 
     dependencies {
         classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
-        classpath "gradle.plugin.com.liferay:gradle-plugins-node:4.3.0"
         classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
         classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
     }
@@ -73,6 +72,7 @@
 }
 
 dependencies {
+    compile fileTree(dir: './libs', include: '*.jar')
     testCompile group: 'junit', name: 'junit', version: '4.12'
     compile group: 'com.beust', name: 'jcommander', version: '1.72'
     compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
@@ -134,12 +134,12 @@
 protobuf {
     generatedFilesBaseDir = "$projectDir/src/"
     protoc {
-        artifact = "com.google.protobuf:protoc:3.5.1-1"
+    	   path = "/usr/bin/protoc"
 
     }
     plugins {
         grpc {
-            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
+	     path = CUR_DIR + "/../deps/grpc-java/compiler/build/exe/java_plugin/protoc-gen-grpc-java"
         }
     }
     generateProtoTasks {
@@ -149,11 +149,6 @@
                     outputSubDir = "gen"
                 }
 
-                js {
-                    outputSubDir = "genjs/"
-                    option "import_style=commonjs"
-                    option "binary"
-                }
             }
         }
         all()*.plugins {
@@ -164,21 +159,8 @@
     }
 }
 
-run {
-    if (project.hasProperty('cmd')) {
-        standardInput = System.in
-        mainClassName = 'org.tron.walletcli.TestClient'
-    }
-}
-
 bootRun {
-    addResources = true
+      addResources = true
+      main = 'org.tron.emb.EmbClientApplication'
 }
 
-allprojects {
-    plugins.withId("com.liferay.node") {
-        node.global = true
-        node.nodeDir = "$projectDir/src/genjs"
-        node.nodeVersion = "8.10.0"
-    }
-}
\ No newline at end of file
